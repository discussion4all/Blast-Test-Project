[{"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\index.js":"1","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\App.js":"2","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\reportWebVitals.js":"3","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\routes\\routes.js":"4","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\login\\login.js":"5","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\dashboard\\dashboard.js":"6","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\common\\footer.js":"7","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\common\\header.js":"8","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\services\\api.js":"9","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\config.js":"10","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\utils\\setAuthToken.js":"11","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\common\\preloading.js":"12","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\dashboard\\audio.js":"13","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Actions\\UserAction.js":"14","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Store.js":"15","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Reducers\\userReducer.js":"16","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Actions\\QuestionAction.js":"17","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Reducers\\questionReducer.js":"18"},{"size":631,"mtime":1608787867619,"results":"19","hashOfConfig":"20"},{"size":1508,"mtime":1608794247056,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1608699530423,"results":"22","hashOfConfig":"20"},{"size":418,"mtime":1608728413360,"results":"23","hashOfConfig":"20"},{"size":969,"mtime":1608791157441,"results":"24","hashOfConfig":"20"},{"size":8227,"mtime":1608868267932,"results":"25","hashOfConfig":"20"},{"size":162,"mtime":1608705020656,"results":"26","hashOfConfig":"20"},{"size":164,"mtime":1608705173023,"results":"27","hashOfConfig":"20"},{"size":1486,"mtime":1608868267814,"results":"28","hashOfConfig":"20"},{"size":120,"mtime":1608699530406,"results":"29","hashOfConfig":"20"},{"size":430,"mtime":1608699530495,"results":"30","hashOfConfig":"20"},{"size":181,"mtime":1608717612253,"results":"31","hashOfConfig":"20"},{"size":1624,"mtime":1608728413360,"results":"32","hashOfConfig":"20"},{"size":172,"mtime":1608792960803,"results":"33","hashOfConfig":"20"},{"size":476,"mtime":1608794226718,"results":"34","hashOfConfig":"20"},{"size":362,"mtime":1608790315342,"results":"35","hashOfConfig":"20"},{"size":451,"mtime":1608800555330,"results":"36","hashOfConfig":"20"},{"size":604,"mtime":1608800610308,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1fg8q66",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\index.js",[],["80","81"],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\App.js",["82","83"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport routes from \"./routes/routes\";\r\nimport {connect,Provider} from 'react-redux'\r\nimport './App.css';\r\nimport \"./style/css/style.css\";\r\nimport {setToken,setName} from './Actions/UserAction'\r\nimport {setAllQuestion,setOneQuestion,setquizType} from './Actions/QuestionAction'\r\n\r\n\r\nfunction App(props) {\r\n\r\n  return (\r\n    <div>\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n              {\r\n                routes.map(({path,Component},index)=>{\r\n                    return (\r\n                      <Route exact path={path} key={index}>\r\n                        <Component dataprops={props} />\r\n                      </Route>\r\n                    )\r\n                })\r\n              }\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    user : state.user,\r\n    questionData : state.questionData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    setToken: (token) =>{\r\n      dispatch(setToken(token))\r\n    },setName:(name)=>{\r\n      dispatch(setName(name))\r\n    },setquizType:(type)=>{\r\n       dispatch(setquizType(type))\r\n    },setAllQuestion:(allQuestion)=>{\r\n      dispatch(setAllQuestion(allQuestion))\r\n    },setOneQuestion:(oneQuestion)=>{\r\n      dispatch(setOneQuestion(oneQuestion))\r\n    }\r\n  }\r\n}\r\n \r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\r\n\r\n","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\reportWebVitals.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\routes\\routes.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\login\\login.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\dashboard\\dashboard.js",["84"],"import React,{useState,useEffect} from \"react\";\r\nimport Footer from \"../common/footer\";\r\nimport Header from \"../common/header\";\r\nimport PreLoading from \"../common/preloading\";\r\nimport ApiServiceCall from \"../../services/api\";\r\nimport {  useHistory } from \"react-router-dom\";\r\nconst Dashboard = (props) => {\r\n\tconsole.log(\"props\",props)\r\n\tconst History =  useHistory();\r\n\tif (localStorage.getItem(\"token\") === null) {\r\n\t    History.push(\"/\");\r\n\t}\r\n\tconst [startloader, setStartloader] = useState(false);\r\n\tconst [answerAction,setAnswerAction] = useState(false);\r\n\tconst [isHint,setIsHint]= useState(false);\r\n\tconst [isExplaination,setIsExplaination]= useState(false);\r\n\tconst [datasetNumber,setDatasetNumber] = useState(1);\r\n\tconst [questionNumber,setQuestionNumber] = useState(0);\r\n\tconst [showQuestion,setShowQuestion]  = useState(false);\r\n\tconst [userAnswer,setUserAnswer] = useState(\"\");\r\n\tconst [check_Answer,setCheck_Answer]= useState(\"\");\r\n\tuseEffect(() => {\r\n\t   getQuestionData(datasetNumber);\r\n\t}, []);\r\n\tconst getQuestionData = async (dataset)=>{\r\n\t\tvar value = {\"set\":dataset};\r\n\t\tsetStartloader(true)\r\n\t\tvar getdata = await ApiServiceCall.getOneQuestionSet(value);\r\n\t\tif(getdata.data.err === null){\r\n\t\t\tif(getdata.data.data.length > 0){\r\n\t\t\t\tprops.dataprops.setAllQuestion(getdata.data.data[0])\r\n\t\t\t\tsetQuestion(getdata.data.data[0].Questions,props.dataprops.questionData.quizType)\r\n\t\t\t\tsetStartloader(false);\r\n\t\t\t}else{\r\n\t\t\t\tHistory.push(\"/audio\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.log(\"Somthing wrong\")\r\n\t\t}\r\n\t}\r\n\tconst setQuestion = async (qdataset,type)=>{\r\n\t\tif(type === \"hardtoeasy\"){\r\n\t\t\tconst b = qdataset.find((item) => item.Type === 'Hard')\r\n\t\t\tprops.dataprops.setOneQuestion(b)\r\n\t\t}else if(type === \"easytohard\"){\r\n\t\t\tif(questionNumber + 1 >= props.dataprops.questionData.allQuestion.Questions.length){\r\n\t\t\t\tprops.dataprops.setOneQuestion(qdataset[0])\r\n\t\t\t}else{\r\n\t\t\t\tprops.dataprops.setOneQuestion(qdataset[questionNumber])\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tconst changeExamType = async(e)=>{\r\n\t\tprops.dataprops.setquizType(e.target.value)\r\n\t\tsetQuestion(props.dataprops.questionData.allQuestion.Questions,e.target.value);\r\n\t\tsetShowQuestion(true)\r\n\t}\r\n\tconst checkAnswer = async()=>{\r\n\t\tsetAnswerAction(true);\r\n\r\n\t\tif(props.dataprops.questionData.oneQuestion.Answer.replace(/\\s+/g,' ').trim().toLowerCase() === userAnswer.replace(/\\s+/g,' ').trim().toLowerCase()){\r\n\t\t\tsetCheck_Answer(true)\r\n\t\t}else{\r\n\t\t\tsetCheck_Answer(false)\r\n\t\t}\r\n\t}\r\n\tconst next_Question = async()=>{\r\n\t\tvar {quizType,allQuestion } = props.dataprops.questionData;\r\n\t\tsetIsExplaination(false)\r\n\t\t\r\n\t\tsetAnswerAction(false)\r\n\t\tsetIsHint(false)\r\n\t\tif(quizType === \"easytohard\"){\r\n\t\t\tsetCheck_Answer(\"\")\r\n\t\t\tif(questionNumber + 1 >= allQuestion.Questions.length){\r\n\t\t\t\tsetQuestionNumber(0)\r\n\t\t\t\tgetQuestionData(datasetNumber+1);\r\n\t\t\t\tsetDatasetNumber(datasetNumber+1)\r\n\t\t\t}else{\r\n\t\t\t\tprops.dataprops.setOneQuestion(allQuestion.Questions[questionNumber+1])\r\n\t\t\t\tsetQuestionNumber(questionNumber+1)\r\n\t\t\t}\r\n\t\t}else if(quizType === \"hardtoeasy\"){\r\n\t\t\tif(check_Answer){\r\n\t\t\t\tsetDatasetNumber(datasetNumber+1)\r\n\t\t\t\tgetQuestionData(datasetNumber+1);\r\n\t\t\t}else{\r\n\t\t\t\tif(questionNumber + 1 >= props.dataprops.questionData.allQuestion.Questions.length){\r\n\t\t\t\t\tsetQuestionNumber(0)\r\n\t\t\t\t\tgetQuestionData(datasetNumber+1);\r\n\t\t\t\t\tsetDatasetNumber(datasetNumber+1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetQuestionNumber(questionNumber + 1)\r\n\t\t\t\t\tprops.dataprops.setOneQuestion(allQuestion.Questions[questionNumber])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n    return(\r\n        <>\r\n        \t{startloader && <PreLoading/>}\r\n            <Header/>\r\n            \t<div className=\"container\">\r\n            \t\t<div className=\"_vertical-center\">\r\n            \t\t\t<div className=\"main-div\">\r\n            \t\t\t\t{props.dataprops.questionData.allQuestion.length !== 0 && (\r\n\t\t\t\t\t\t\t\t<form >\r\n\t\t\t\t\t\t\t\t\t{ !showQuestion && (\r\n\t\t\t\t\t\t\t\t\t  \t<div className=\"more-select\" onChange={(e)=>changeExamType(e)}>\r\n\t\t\t\t\t\t\t            \t<div className=\"input-box-web\">\r\n\t\t\t\t\t\t\t            \t\t<input type=\"radio\" value=\"easytohard\" name=\"examtype\" /> <span >Easy to Hard</span >\r\n\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t            <div className=\"input-box-web\">\r\n\t\t\t\t\t\t\t\t              <input type=\"radio\" value=\"hardtoeasy\" name=\"examtype\"/><span >Hard to Easy</span >\r\n\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t            \t</div>)\r\n\t\t\t\t\t\t            }\r\n\t\t\t\t\t            \t{showQuestion &&(\r\n\t\t\t\t\t\t            \t<>\r\n\t\t\t\t\t\t\t\t\t\t  \t<div className=\"cut-box\">\r\n\t\t\t\t\t\t\t\t\t\t    \t<label htmlFor=\"fname\">Question :-  </label><span >{props.dataprops.questionData.oneQuestion.Question}</span >\r\n\t\t\t\t\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t\t\t\t    <div className=\"cut-box\">\r\n\t\t\t\t\t\t\t\t\t\t\t    <label htmlFor=\"lname\">Answer</label>\r\n\t\t\t\t\t\t\t\t\t\t\t    <input className=\"text-box-cust\" onChange={(e) => setUserAnswer(e.target.value)} type=\"text\" id=\"answer\" name=\"lastname\" placeholder=\"Your answer\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t    {isHint && <><label htmlFor=\"fname\">Hint :-  </label><span >{props.dataprops.questionData.oneQuestion.Hint}</span ></> }\r\n\t\t\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t\t    <br/>\r\n\t\t\t\t\t\t\t\t\t\t\t    {isExplaination && <><label htmlFor=\"fname\">Explaination :-  </label><span >{props.dataprops.questionData.oneQuestion.Explanation}</span ></> }\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t{ !answerAction &&(\r\n\t\t\t\t\t\t\t\t\t\t\t    <div className=\"more-select\">\r\n\t\t\t\t\t\t\t\t\t            \t<div className=\"input-box-web\">\r\n\t\t\t\t\t\t\t\t\t            \t\t<input type=\"button\" className=\"submit-btn\" onClick={()=>setIsHint(true)} value=\"Hint\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t\t\t            <div className=\"input-box-web\"> \r\n\t\t\t\t\t\t\t\t\t\t              <input type=\"button\" className=\"submit-btn\" onClick={()=>checkAnswer()} value=\"Submit\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t            \t</div>\r\n\t\t\t\t\t\t\t\t            )}\r\n\t\t\t\t\t\t\t            \t{answerAction && \r\n\t\t\t\t\t\t\t            \t\t<>\r\n\t\t\t\t\t\t\t\t            \t<div className=\"more-select\">\r\n\t\t\t\t\t\t\t\t\t            \t<div className=\"input-box-web\">\r\n\t\t\t\t\t\t\t\t\t            \t\t<label htmlFor=\"fname\">Correct Answer :-  </label><span >{props.dataprops.questionData.oneQuestion.Answer}</span >\r\n\t\t\t\t\t\t\t\t\t            \t\t<br/>\r\n\t\t\t\t\t\t\t\t\t            \t\t<label htmlFor=\"fname\">Your Answer:-  </label><span >{check_Answer ? \"Correct\" : \"Incorrect\"}</span >\r\n\t\t\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t            \t</div>\r\n\t\t\t\t\t\t\t\t            \t<div className=\"more-select\">\r\n\t\t\t\t\t\t\t\t\t            \t<div className=\"input-box-web\">\r\n\t\t\t\t\t\t\t\t\t            \t\t<input type=\"button\" onClick={()=>setIsExplaination(true)} className=\"submit-btn\" value=\"Explaination\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t\t\t            <div className=\"input-box-web\">\r\n\t\t\t\t\t\t\t\t\t\t              <input type=\"button\" className=\"submit-btn\" onClick={()=>next_Question()} value=\"Next\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t            \t</div>\r\n\t\t\t\t\t\t\t\t            \t</>\r\n\t\t\t\t\t\t\t            \t}\r\n\t\t\t\t\t\t            \t</>)\r\n\t\t\t\t\t\t            }\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n            \t\t</div>\r\n            \t</div>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\common\\footer.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\common\\header.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\services\\api.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\config.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\utils\\setAuthToken.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\common\\preloading.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\components\\dashboard\\audio.js",["85"],"import React, { useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Header from \"../common/header\";\r\nimport Footer from \"../common/footer\";\r\n\r\nconst Audio = () => {\r\n\r\n    const playAudio = () => {\r\n        const audioEl = document.getElementsByClassName(\"audio-element\")[0]\r\n        audioEl.play()\r\n      }\r\n\r\n      const stopAudio = () => {\r\n        const audioEl = document.getElementsByClassName(\"audio-element\")[0]\r\n        audioEl.pause()\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <div className=\"container\">\r\n        <div className=\"_vertical-center\">\r\n        \t<div className=\"main-div\">\r\n                <button onClick={()=>playAudio()}>\r\n                    <span>Play Audio</span>\r\n                </button>\r\n                <audio className=\"audio-element\">\r\n                <source src=\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"></source>\r\n                </audio>\r\n                <CountdownCircleTimer\r\n                    isPlaying\r\n                    duration={30}\r\n                    colors={[\r\n                    ['#004777', 0.33],\r\n                    ['#F7B801', 0.33],\r\n                    ['#A30000', 0.33],\r\n                    ]}\r\n                    onComplete={()=>stopAudio()}\r\n                >\r\n                    {({ remainingTime }) => remainingTime}\r\n                </CountdownCircleTimer>\r\n                <h4>Please listen to this music while you take a mental break.</h4>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <Footer/>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Audio;","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Actions\\UserAction.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Store.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Reducers\\userReducer.js",["86"],"const userReducer = (state = {\n\tname:\"Hemin\",\n\ttoken:\"\"\n},action) =>{\n\tconsole.log(action.type,action.payload)\n\tswitch(action.type){\n\t\tcase \"SET_NAME_FULFILLED\":\n\t\t\tstate={\n\t\t\t\t...state,\n\t\t\t\tname : action.payload\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"SET_TOKEN\":\n\t\t\tstate={\n\t\t\t\t...state,\n\t\t\t\ttoken : action.payload\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn state;\n}\n\nexport default userReducer","F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Actions\\QuestionAction.js",[],"F:\\WorkFromHome\\December\\questionApp\\Blast-Test-React-Project\\src\\Reducers\\questionReducer.js",["87"],"const questionReducer = (state = {\r\n\tallQuestion : [],\r\n\toneQuestion : {},\r\n\tquizType : \"\",\r\n\tanswers : []\r\n},action) =>{\r\n\r\n\tswitch(action.type){\r\n\t\tcase \"SET_ALL_QUESTION\":\r\n\t\t\tstate={\r\n\t\t\t\t...state,\r\n\t\t\t\tallQuestion : action.payload\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"SET_ONE_QUESTION\":\r\n\t\t\tstate={\r\n\t\t\t\t...state,\r\n\t\t\t\toneQuestion : action.payload\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"SET_QUIZ_TYPE\":\r\n\t\t\tstate={\r\n\t\t\t\t...state,\r\n\t\t\t\tquizType : action.payload\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"SET_ALL_ANSWER\":\r\n\t\t\tstate={\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers : action.payload\r\n\t\t\t}\r\n\t}\r\n\treturn state;\r\n}\r\n\r\nexport default questionReducer",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":50,"nodeType":"94","messageId":"95","endLine":2,"endColumn":54},{"ruleId":"92","severity":1,"message":"96","line":4,"column":17,"nodeType":"94","messageId":"95","endLine":4,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":24,"column":5,"nodeType":"99","endLine":24,"endColumn":7,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"101","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":6,"column":2,"nodeType":"104","messageId":"105","endLine":19,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":8,"column":2,"nodeType":"104","messageId":"105","endLine":32,"endColumn":3},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'datasetNumber' and 'getQuestionData'. Either include them or remove the dependency array.","ArrayExpression",["108"],"'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [datasetNumber, getQuestionData]",{"range":"111","text":"112"},[1007,1009],"[datasetNumber, getQuestionData]"]